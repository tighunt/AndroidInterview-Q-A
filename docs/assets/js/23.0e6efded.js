(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{232:function(i,t,e){"use strict";e.r(t);var n=e(0),v=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var i=this,t=i.$createElement,e=i._self._c||t;return e("div",{staticClass:"content"},[e("h4",{attrs:{id:"activity-window-view三者的差别-fragment的特点-360"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#activity-window-view三者的差别-fragment的特点-360","aria-hidden":"true"}},[i._v("#")]),i._v(" Activity Window View三者的差别,fragment的特点-360")]),i._v(" "),e("p",[i._v("Activity像一个工匠（控制单元），Window像窗户（承载模型），View像窗花（显示视图）\nLayoutInflater像剪刀，Xml配置像窗花图纸。")]),i._v(" "),e("ol",[e("li",[i._v("在Activity中调用attach，创建了一个Window")]),i._v(" "),e("li",[i._v("创建的window是其子类PhoneWindow，在attach中创建PhoneWindow")]),i._v(" "),e("li",[i._v("在Activity中调用setContentView(R.layout.xxx)")]),i._v(" "),e("li",[i._v("其中实际上是调用的getWindow().setContentView()")]),i._v(" "),e("li",[i._v("调用PhoneWindow中的setContentView方法")]),i._v(" "),e("li",[i._v("创建ParentView：作为ViewGroup的子类，实际是创建的DecorView(作为FramLayout的子类）")]),i._v(" "),e("li",[i._v("将指定的R.layout.xxx进行填充，通过布局填充器进行填充【其中的parent指的就是DecorView】")]),i._v(" "),e("li",[i._v("调用到ViewGroup")]),i._v(" "),e("li",[i._v("调用ViewGroup的removeAllView()，先将所有的view移除掉")]),i._v(" "),e("li",[i._v("添加新的view：addView()")])]),i._v(" "),e("p",[i._v("Fragment 特点")]),i._v(" "),e("ul",[e("li",[i._v("Fragment可以作为Activity界面的一部分组成出现；")]),i._v(" "),e("li",[i._v("可以在一个Activity中同时出现多个Fragment，并且一个Fragment也可以在多个Activity中使用；")]),i._v(" "),e("li",[i._v("在Activity运行过程中，可以添加、移除或者替换Fragment；")]),i._v(" "),e("li",[i._v("Fragment可以响应自己的输入事件，并且有自己的生命周期，它们的生命周期会受宿主Activity的生命周期影响。")])])])}],!1,null,null,null);v.options.__file="activity-window-view三者的差别-fragment的特点-360.md";t.default=v.exports}}]);