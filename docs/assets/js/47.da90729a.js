(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{191:function(t,s,e){"use strict";e.r(s);var i=e(0),n=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"content"},[s("h4",{attrs:{id:"哪些情况下的对象会被垃圾回收机制处理掉-美团-小米"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哪些情况下的对象会被垃圾回收机制处理掉-美团-小米","aria-hidden":"true"}},[this._v("#")]),this._v(" 哪些情况下的对象会被垃圾回收机制处理掉-美团-小米")]),this._v(" "),s("p",[this._v("Java 垃圾回收机制最基本的做法是分代回收。内存中的区域被划分成不同的世代，对象根据其存活的时间被保存在对应世代的区域中。一般的实现是划分成3个世代：年轻、年老和永久。内存的分配是发生在年轻世代中的。当一个对象存活时间足够长的时候，它就会被复制到年老世代中。对于不同的世代可以使用不同的垃圾回收算法。进行世代划分的出发点是对应用中对象存活时间进行研究之后得出的统计规律。一般来说，一个应用中的大部分对象的存活时间都很短。比如局部变量的存活时间就只在方法的执行过程中。基于这一点，对于年轻世代的垃圾回收算法就可以很有针对性。")])])}],!1,null,null,null);n.options.__file="哪些情况下的对象会被垃圾回收机制处理掉-美团-小米.md";s.default=n.exports}}]);