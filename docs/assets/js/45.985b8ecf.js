(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{193:function(t,e,i){"use strict";i.r(e);var n=i(0),s=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[i("h4",{attrs:{id:"内部类的作用-乐视"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#内部类的作用-乐视","aria-hidden":"true"}},[t._v("#")]),t._v(" 内部类的作用-乐视")]),t._v(" "),i("ol",[i("li",[t._v("内部类可以用多个实例，每个实例都有自己的状态信息，并且与其他外围对象的信息相互独立。")]),t._v(" "),i("li",[t._v("在单个外围类中，可以让多个内部类以不同的方式实现同一个接口，或者继承同一个类。")]),t._v(" "),i("li",[t._v("创建内部类对象的时刻并不依赖于外围类对象的创建。")]),t._v(" "),i("li",[t._v("内部类并没有令人迷惑的“is-a”关系，他就是一个独立的实体。")]),t._v(" "),i("li",[t._v("内部类提供了更好的封装，除了该外围类，其他类都不能访问")])])])}],!1,null,null,null);s.options.__file="内部类的作用-乐视.md";e.default=s.exports}}]);